name: RuboCop Linting

on:
  pull_request:
    branches:
      # todo: update to match branch/merge strategy
      - main
      - develop
      - feature/*

jobs:
  rubocop:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.1'
          bundler-cache: true

      - name: Troubleshoot
        run: |
          echo "Checking Ruby version..."
          ruby -v
          echo "Checking Bundler version..."
          bundle -v
          echo "checking rubocop version..."
          bundle exec rubocop -v
          echo "checking ls -la"
          ls -la
          echo "checking pwd"
          pwd

      - name: Run RuboCop on all files
        id: rubocop_full
        continue-on-error: true
        env:
          RUBOCOP_ENV: CI
        run: bundle exec rubocop --format json > .rubocop/report.json || true

      - name: cat rubocop report
        run: cat .rubocop/report.json

      - name: Process RuboCop Results
        id: process_results
        run: |
          echo "Parsing RuboCop results..."
          mkdir -p .rubocop
          jq '.files | map(select(.offenses | length == 0) | .path)' .rubocop/report.json > .rubocop/clean_files.json
          jq '.files | map(select(.offenses | length > 0) | .path)' .rubocop/report.json > .rubocop/offending_files.json

      - name: cat clean files
        run: cat .rubocop/clean_files.json

      - name: cat offending files
        run: cat .rubocop/offending_files.json

      - name: Remove fully lintable files from the exclude list
        id: update_exclude
        run: |
          CLEAN_FILES=$(jq -r '.[]' .rubocop/clean_files.json)

          if [[ -n "$CLEAN_FILES" ]]; then
            echo "Removing clean files from .rubocop/exclusions.yml..."

            # Escape special characters in filenames for awk regex
            FILES_PATTERN=$(echo "$CLEAN_FILES" | sed 's/[.[\*^$]/\\&/g' | tr '\n' '|')
            FILES_PATTERN="${FILES_PATTERN%|}"  # Remove trailing pipe '|'

            # Use awk to process exclusions.yml safely
            awk -v pat="$FILES_PATTERN" '
              /Exclude:/ {inside_exclude=1}
              /^\s*$/ {inside_exclude=0}
              inside_exclude && $0 ~ pat {next}
              {print}
            ' .rubocop/exclusions.yml > .rubocop/exclusions.yml.tmp

            mv .rubocop/exclusions.yml.tmp .rubocop/exclusions.yml
          else
            echo "No clean files to remove from exclusion list."
          fi
        continue-on-error: true

      - name: commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "ci: Removing fully lintable files from exclusion list [skip ci]"
          git push

      - name: Get changed files in PR
        id: changed_files
        run: |
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...${{ github.head_ref }} | grep '\.rb$' || true)
          echo "$CHANGED_FILES" > changed_files.txt

      - name: Run Auto-fix on changed files only
        id: rubocop_autofix
        continue-on-error: true
        run: |
          echo "Running auto-corrections on changed files..."
          if [[ -s changed_files.txt ]]; then
            bundle exec rubocop -a $(cat changed_files.txt) || true
            git add $(cat changed_files.txt)
            if ! git diff --cached --quiet; then
              git commit -m "Auto-fixed RuboCop offenses in changed files"
              git push
            fi
          fi

      - name: Final RuboCop Check (Blocking Step)
        run: |
          bundle exec rubocop
